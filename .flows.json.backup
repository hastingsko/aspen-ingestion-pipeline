[{"id":"acec44a79af2e046","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"8707bb8fcbd22313","type":"tab","label":"Trial Flow","disabled":false,"info":"","env":[]},{"id":"ae6893569e928f13","type":"postgreSQLConfig","name":"localconnection","host":"127.0.0.1","hostFieldType":"str","port":"5432","portFieldType":"num","database":"sales","databaseFieldType":"str","ssl":"false","sslFieldType":"bool","applicationName":"","applicationNameType":"str","max":"10","maxFieldType":"num","idle":"1000","idleFieldType":"num","connectionTimeout":"10000","connectionTimeoutFieldType":"num","user":"postgres","userFieldType":"str","password":"Matamama@1993","passwordFieldType":"str"},{"id":"edd8c0dfab7dbe4d","type":"inject","z":"8707bb8fcbd22313","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":280,"wires":[["617a68d518a806be"]]},{"id":"617a68d518a806be","type":"file in","z":"8707bb8fcbd22313","name":"Getdata","filename":"C:\\Users\\Dell\\Documents\\xml-files\\sample_one.xml","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":100,"y":340,"wires":[["0b251e72cdacc2ef"]]},{"id":"2f0b5597b5a54597","type":"xml","z":"8707bb8fcbd22313","name":"Parsexml","property":"payload","attr":"","chr":"","x":100,"y":460,"wires":[["215133c88cbfb48c"]]},{"id":"0b251e72cdacc2ef","type":"function","z":"8707bb8fcbd22313","name":"Escape &","func":"// Function node to escape unescaped ampersands in XML\nmsg.payload = msg.payload.replace(/&(?!amp;|lt;|gt;|quot;|apos;)/g, '&amp;');\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":100,"y":400,"wires":[["2f0b5597b5a54597"]]},{"id":"319d9531985b7f7a","type":"debug","z":"8707bb8fcbd22313","name":"debug 6","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1360,"y":380,"wires":[]},{"id":"9ef1e703b94a3042","type":"function","z":"8707bb8fcbd22313","name":"medications  dataset create","func":"// Access the array at the specified path\nlet entries = msg.originalPayload.ClinicalDocument.component[0].structuredBody[0].component[8].section[0].entry;\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n\nfunction convertDateToPostgresTimestamp(dateString) {\n    // Check if the input is valid\n    if (!dateString || dateString.length !== 8) {\n        return '1970-01-01 00:00:00'; // Default value for invalid input\n    }\n\n    // Extract year, month, and day from the date string\n    const year = dateString.substring(0, 4);\n    const month = dateString.substring(4, 6);\n    const day = dateString.substring(6, 8);\n\n    // Validate the date components\n    if (\n        isNaN(year) || isNaN(month) || isNaN(day) ||\n        parseInt(month, 10) < 1 || parseInt(month, 10) > 12 ||\n        parseInt(day, 10) < 1 || parseInt(day, 10) > 31\n    ) {\n        return '1970-01-01 00:00:00'; // Default value for invalid date\n    }\n\n    // Construct the PostgreSQL-compatible timestamp without timezone\n    const timestamp = `${year}-${month}-${day} 00:00:00`;\n\n    return timestamp;\n}\n\n// Example usage\nconst result = convertDateToPostgresTimestamp(\"20240509\");\n\n\n// Loop through the array\nfor (let i = 0; i < entries.length; i++) {\n    let newMsg = { ...msg }; // Create a copy of the msg object\n\n    // Status Code\n    newMsg.statusCode = (entries[i].substanceAdministration &&\n                         entries[i].substanceAdministration[0].statusCode &&\n                         entries[i].substanceAdministration[0].statusCode[0].$ &&\n                         entries[i].substanceAdministration[0].statusCode[0].$.code) \n                         ? entries[i].substanceAdministration[0].statusCode[0].$.code \n                         : null;\n\n    // Effective Time: Low Value\n    newMsg.effectiveTimeLowValue = (entries[i].substanceAdministration &&\n                                    entries[i].substanceAdministration[0].effectiveTime &&\n                                    entries[i].substanceAdministration[0].effectiveTime[0].low &&\n                                    entries[i].substanceAdministration[0].effectiveTime[0].low[0].$ &&\n                                    entries[i].substanceAdministration[0].effectiveTime[0].low[0].$.value)\n                                    ? convertDateToPostgresTimestamp(entries[i].substanceAdministration[0].effectiveTime[0].low[0].$.value)\n                                    : '1970-01-01 00:00:00'; // Default to earliest possible date\n\n    // console.log(\"here\",newMsg.effectiveTimeLowValue)\n    // Dose Quantity\n    newMsg.doseQuantity = (entries[i].substanceAdministration &&\n                           entries[i].substanceAdministration[0].doseQuantity &&\n                           entries[i].substanceAdministration[0].doseQuantity[0].$ &&\n                           entries[i].substanceAdministration[0].doseQuantity[0].$.value) \n                           ? entries[i].substanceAdministration[0].doseQuantity[0].$.value \n                           : null;\n\n    // Medication Information: Code\n    newMsg.medicationCode = (entries[i].substanceAdministration &&\n                             entries[i].substanceAdministration[0].consumable &&\n                             entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n                             entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n                             entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n                             entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n                             entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.code) \n                             ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.code \n                             : null;\n\n    // Medication Information: Display Name\n    newMsg.medicationDisplayName = (entries[i].substanceAdministration &&\n                                    entries[i].substanceAdministration[0].consumable &&\n                                    entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n                                    entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n                                    entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n                                    entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n                                    entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.displayName) \n                                    ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.displayName \n                                    : null;\n\n    // Medication Information: Code System\n    newMsg.medicationCodeSystem = (entries[i].substanceAdministration &&\n                                   entries[i].substanceAdministration[0].consumable &&\n                                   entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n                                   entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n                                   entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n                                   entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n                                   entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.codeSystem) \n                                   ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.codeSystem \n                                   : null;\n\n    // Dosage Narrative Text\n    newMsg.dosageNarrativeText = (entries[i].substanceAdministration &&\n                                  entries[i].substanceAdministration[0].text &&\n                                  entries[i].substanceAdministration[0].text[0]) \n                                  ? entries[i].substanceAdministration[0].text[0]\n                                  : null;\n\n    // Dosage Route of Administration: Code\n    newMsg.dosageRouteCode = (entries[i].substanceAdministration &&\n                              entries[i].substanceAdministration[0].entryRelationship &&\n                              entries[i].substanceAdministration[0].entryRelationship[0].act &&\n                              entries[i].substanceAdministration[0].entryRelationship[0].act[0].code &&\n                              entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$ &&\n                              entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.code) \n                              ? entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.code \n                              : null;\n\n    // Dosage Route of Administration: Display Name\n    newMsg.dosageRouteDisplayName = (entries[i].substanceAdministration &&\n                                     entries[i].substanceAdministration[0].entryRelationship &&\n                                     entries[i].substanceAdministration[0].entryRelationship[0].act &&\n                                     entries[i].substanceAdministration[0].entryRelationship[0].act[0].code &&\n                                     entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$ &&\n                                     entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.displayName) \n                                     ? entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.displayName \n                                     : null;\n\n    // Dosage Route of Administration: Code System\n    newMsg.dosageRouteCodeSystem = (entries[i].substanceAdministration &&\n                                    entries[i].substanceAdministration[0].entryRelationship &&\n                                    entries[i].substanceAdministration[0].entryRelationship[0].act &&\n                                    entries[i].substanceAdministration[0].entryRelationship[0].act[0].code &&\n                                    entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$ &&\n                                    entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.codeSystem) \n                                    ? entries[i].substanceAdministration[0].entryRelationship[0].act[0].code[0].$.codeSystem \n                                    : null;\n\n    // Send the new message to the next node\n    node.send(newMsg);\n}\n\n// Return null to prevent the original message from continuing\nreturn null;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":240,"wires":[["df4a72b6c16b3b48"]]},{"id":"15ebc53dcc69c452","type":"function","z":"8707bb8fcbd22313","name":"problems/conditions dataset create","func":"// Access the array at the specified path\nlet entries = msg.originalPayload.ClinicalDocument.component[0].structuredBody[0].component[4].section[0].entry;\n  // Patient Id\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n// Function to convert `YYYYMMDDHHMMSS-zzzz` to PostgreSQL-compatible timestamp\nfunction convertToTimestamp(effectiveTime) {\n    if (!effectiveTime) return '1970-01-01 00:00:00'; // Default value\n\n    // Extract date, time, and offset\n    let date = effectiveTime.substring(0, 8); // YYYYMMDD\n    let time = effectiveTime.substring(8, 14); // HHMMSS\n    let offset = effectiveTime.substring(14);  // -0500\n\n    let year = date.substring(0, 4);\n    let month = date.substring(4, 6);\n    let day = date.substring(6, 8);\n    let hour = time.substring(0, 2);\n    let minute = time.substring(2, 4);\n    let second = time.substring(4, 6);\n\n    // Handle time zone offset\n    let offsetHours = parseInt(offset.substring(0, 3), 10);\n    let offsetMinutes = parseInt(offset.substring(0, 2) + offset.substring(3, 5), 10);\n    let totalOffsetMinutes = offsetHours * 60 + (offsetMinutes > 0 ? offsetMinutes : 0);\n    let offsetSign = offset[0] === '-' ? -1 : 1;\n\n    // Adjust date and time for the offset\n    let dateObj = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\n    dateObj.setUTCMinutes(dateObj.getUTCMinutes() + (offsetSign * totalOffsetMinutes));\n\n    // Format as PostgreSQL-compatible timestamp\n    return dateObj.toISOString().replace('T', ' ').substring(0, 19);\n}\n\n// Loop through the array\nfor (let i = 0; i < entries.length; i++) {\n    let newMsg = { ...msg }; // Create a copy of the msg object\n\n    // Effective Time: Low Value\n    newMsg.effectiveTimeLowValue = (entries[i].act &&\n                                    entries[i].act[0].effectiveTime &&\n                                    entries[i].act[0].effectiveTime[0].low &&\n                                    entries[i].act[0].effectiveTime[0].low[0].$ &&\n                                    entries[i].act[0].effectiveTime[0].low[0].$.value)\n                                    ? convertToTimestamp(entries[i].act[0].effectiveTime[0].low[0].$.value)\n                                    : '1970-01-01 00:00:00'; // Default to earliest possible date\n\n    // Condition: Code\n    newMsg.conditionCode = (entries[i].act &&\n                            entries[i].act[0].entryRelationship &&\n                            entries[i].act[0].entryRelationship[0].observation &&\n                            entries[i].act[0].entryRelationship[0].observation[0].value &&\n                            entries[i].act[0].entryRelationship[0].observation[0].value[0] &&\n                            entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n                            entries[i].act[0].entryRelationship[0].observation[0].value[0].$.code)\n                            ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.code\n                            : 'unknown';\n\n    // Condition: Display Name\n    newMsg.conditionDisplayName = (entries[i].act &&\n                                   entries[i].act[0].entryRelationship &&\n                                   entries[i].act[0].entryRelationship[0].observation &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0] &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].$.displayName)\n                                   ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.displayName\n                                   : 'No description';\n\n    // Condition: Code System\n    newMsg.conditionCodeSystem = (entries[i].act &&\n                                  entries[i].act[0].entryRelationship &&\n                                  entries[i].act[0].entryRelationship[0].observation &&\n                                  entries[i].act[0].entryRelationship[0].observation[0].value &&\n                                  entries[i].act[0].entryRelationship[0].observation[0].value[0] &&\n                                  entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n                                  entries[i].act[0].entryRelationship[0].observation[0].value[0].$.codeSystem)\n                                  ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.codeSystem\n                                  : 'unknown';\n\n    // Narrative Description\n    newMsg.narrativeDescription = (entries[i].act &&\n                                   entries[i].act[0].entryRelationship &&\n                                   entries[i].act[0].entryRelationship[0].observation &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0] &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].translation &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].translation[0] &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].translation[0].$ &&\n                                   entries[i].act[0].entryRelationship[0].observation[0].value[0].translation[0].$.displayName)\n                                   ? entries[i].act[0].entryRelationship[0].observation[0].value[0].translation[0].$.displayName\n                                   : 'No description';\n  \n    // Send the new message to the next node\n    node.send(newMsg);\n}\n\n// Return null to prevent the original message from continuing\nreturn null;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":420,"wires":[["a7b93ba1e1ab7b95"]]},{"id":"a69b8057a54de54b","type":"function","z":"8707bb8fcbd22313","name":"immunizations dataset create","func":"// Access the array at the specified path\nlet entries = msg.originalPayload.ClinicalDocument.component[0].structuredBody[0].component[15].section[0].entry;\n\n// Patient Id\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n// Loop through the array\nfor (let i = 0; i < entries.length; i++) {\n    let newMsg = { ...msg }; // Create a copy of the msg object\n\n    // Status Code\n    newMsg.statusCode = (entries[i].substanceAdministration &&\n        entries[i].substanceAdministration[0].statusCode &&\n        entries[i].substanceAdministration[0].statusCode[0].$ &&\n        entries[i].substanceAdministration[0].statusCode[0].$.code)\n        ? entries[i].substanceAdministration[0].statusCode[0].$.code\n        : '0000'; // Default to '0000' if not available\n\n    // Effective Time (Vaccine Date) - Convert to Timestamp\n    newMsg.effectiveTime = (entries[i].substanceAdministration &&\n        entries[i].substanceAdministration[0].effectiveTime &&\n        entries[i].substanceAdministration[0].effectiveTime[0] &&\n        entries[i].substanceAdministration[0].effectiveTime[0].$ &&\n        entries[i].substanceAdministration[0].effectiveTime[0].$.value)\n        ? entries[i].substanceAdministration[0].effectiveTime[0].$.value\n        : '1970-01-01 00:00:00'; // Default to '1970-01-01 00:00:00' if not available\n\n    // Vaccine Code\n    newMsg.vaccineCode = (entries[i].substanceAdministration &&\n        entries[i].substanceAdministration[0].consumable &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0] &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.code)\n        ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.code\n        : 'UNKNOWN'; // Default to 'UNKNOWN' if not available\n\n    // Vaccine Display Name\n    newMsg.vaccineDisplayName = (entries[i].substanceAdministration &&\n        entries[i].substanceAdministration[0].consumable &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0] &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.displayName)\n        ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.displayName\n        : 'UNKNOWN'; // Default to 'UNKNOWN' if not available\n\n    // Vaccine Code System\n    newMsg.vaccineCodeSystem = (entries[i].substanceAdministration &&\n        entries[i].substanceAdministration[0].consumable &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0] &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$ &&\n        entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.codeSystem)\n        ? entries[i].substanceAdministration[0].consumable[0].manufacturedProduct[0].manufacturedMaterial[0].code[0].$.codeSystem\n        : 'UNKNOWN'; // Default to 'UNKNOWN' if not available\n\n    // Send the new message to the next node\n    node.send(newMsg);\n}\n\n// Return null to prevent the original message from continuing\nreturn null;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":480,"wires":[["8f530f6c5d9073bf"]]},{"id":"ed97a23c6f98a08b","type":"function","z":"8707bb8fcbd22313","name":"allergies dataset create","func":"\n// Patient Id\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n\n// Function to convert date string (YYYYMMDDHHMMSS) to a PostgreSQL-compatible timestamp\nfunction convertToTimestamp(dateStr) {\n    if (!dateStr || dateStr.length !== 14) {\n        return \"1970-01-01 00:00:00\"; // Return default timestamp for invalid or empty dateStr\n    }\n\n    // Extract components from the date string\n    let year = dateStr.substring(0, 4);\n    let month = dateStr.substring(4, 6);\n    let day = dateStr.substring(6, 8);\n    let hour = dateStr.substring(8, 10);\n    let minute = dateStr.substring(10, 12);\n    let second = dateStr.substring(12, 14);\n\n    // Construct and return the formatted date string in 'YYYY-MM-DD HH:MI:SS' format\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}\n\n// Access the array at the specified path\nlet entries = msg.originalPayload.ClinicalDocument.component[0].structuredBody[0].component[7].section[0].entry;\n\n// Loop through the array\nfor (let i = 0; i < entries.length; i++) {\n    let newMsg = { ...msg }; // Create a copy of the msg object\n\n    // Effective Time: Low Value (Date) - Convert to PostgreSQL-compatible timestamp\n    let effectiveTimeRaw = (entries[i].act &&\n        entries[i].act[0].effectiveTime &&\n        entries[i].act[0].effectiveTime[0].low &&\n        entries[i].act[0].effectiveTime[0].low[0].$ &&\n        entries[i].act[0].effectiveTime[0].low[0].$.value)\n        ? entries[i].act[0].effectiveTime[0].low[0].$.value\n        : null;\n    newMsg.effectiveTime = effectiveTimeRaw ? convertToTimestamp(effectiveTimeRaw) : \"1970-01-01 00:00:00\";\n\n    // Status Code\n    newMsg.statusCode = (entries[i].act &&\n        entries[i].act[0].statusCode &&\n        entries[i].act[0].statusCode[0].$ &&\n        entries[i].act[0].statusCode[0].$.code)\n        ? entries[i].act[0].statusCode[0].$.code\n        : null;\n\n    // Type of Allergy: Display Name\n    newMsg.typeOfAllergyDisplayName = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$.displayName)\n        ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.displayName\n        : null;\n\n    // Type of Allergy: Code: Code System\n    newMsg.typeOfAllergyCodeSystem = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$.codeSystem)\n        ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.codeSystem\n        : null;\n\n    // Drug: Code\n    newMsg.drugCode = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.code)\n        ? entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.code\n        : null;\n\n    // Drug: Display Name\n    newMsg.drugDisplayName = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.displayName)\n        ? entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.displayName\n        : null;\n\n    // Drug: Code System\n    newMsg.drugCodeSystem = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.codeSystem)\n        ? entries[i].act[0].entryRelationship[0].observation[0].participant[0].participantRole[0].playingEntity[0].code[0].$.codeSystem\n        : null;\n\n    // Narrative Text\n    newMsg.narrativeText = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.displayName)\n        ? entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.displayName\n        : null;\n\n    // Reaction: Code\n    newMsg.reactionCode = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.code)\n        ? entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.code\n        : null;\n    // Reaction: Display Name\n    newMsg.reactionDisplayName = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.displayName)\n        ? entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.displayName\n        : null;\n\n    // Reaction: Code System\n    newMsg.reactionCodeSystem = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.codeSystem)\n        ? entries[i].act[0].entryRelationship[0].observation[0].entryRelationship[0].observation[0].value[0].$.codeSystem\n        : null;\n\n    // Type of Allergy: Code\n    newMsg.typeOfAllergyCode = (entries[i].act &&\n        entries[i].act[0].entryRelationship &&\n        entries[i].act[0].entryRelationship[0].observation &&\n        entries[i].act[0].entryRelationship[0].observation[0].value &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$ &&\n        entries[i].act[0].entryRelationship[0].observation[0].value[0].$.code)\n        ? entries[i].act[0].entryRelationship[0].observation[0].value[0].$.code\n        : null;\n\n    // Send the new message to the next node\n    node.send(newMsg);\n}\n\n// Return null to prevent the original message from continuing\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":540,"wires":[["cf62e45a669452f4"]]},{"id":"389e39e77138df30","type":"function","z":"8707bb8fcbd22313","name":"Document ID","func":"// Store the original payload\nmsg.originalPayload = RED.util.cloneMessage(msg.payload); // This ensures a deep copy of the payload\n\n// Extract document ID from the ClinicalDocument XML structure\nmsg.document_id = msg.payload.ClinicalDocument.id[0].$.root;\n\n// Return the message to continue to the next node (e.g., a PostgreSQL node to check existence)\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":120,"wires":[[]]},{"id":"4f441ebf31270eef","type":"function","z":"8707bb8fcbd22313","name":"Check document existance","func":"// Assuming msg.payload contains the query result from the PostgreSQL node\nconst count = msg.payload[\"0\"].count;\n\n\nif (count > 0) {\n    // Document exists, stop processing\n    node.status({fill: \"red\", shape: \"ring\", text: \"Document already exists\"});\n    return null; // Stops the flow\n} else {\n    // Document does not exist, proceed to insertion\n    msg.payload = {\n        hash: msg.hash // Only document ID is needed for insertion\n    };\n\n    // Optionally, maintain original data for use later in the flow\n    msg.originalPayload = msg.originalPayload;\n\n    return msg; // Passes the message to the next node\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":380,"wires":[["7a2e9ff6da0a66f0"]]},{"id":"6e047476c4fca8f0","type":"function","z":"8707bb8fcbd22313","name":"Patient Create Dataset","func":"// Function to convert a date string from \"YYYYMMDD\" to \"YYYY-MM-DD\"\nfunction convertDateToPostgresFormat(dateString) {\n    // Check if the input is valid and matches the \"YYYYMMDD\" format\n    if (dateString && dateString.length === 8) {\n        // Extract year, month, and day from the input string\n        const year = dateString.slice(0, 4);\n        const month = dateString.slice(4, 6);\n        const day = dateString.slice(6, 8);\n\n        // Return the formatted date string in \"YYYY-MM-DD\" format\n        return `${year}-${month}-${day}`;\n    } else {\n        // Return null if the input is invalid or empty\n        return null;\n    }\n}\n\n// Extract and handle patient fields from the XML payload\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\nmsg.healthcloudga__name__c = `${msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].name[0].given[0]} ${msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].name[0].family[0]}` || null;\nmsg.healthcloudga__givenname1__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].name[0].given[0] || null;\nmsg.healthcloudga__familyname1__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].name[0].family[0] || null;\nmsg.healthcloudga__birthdate__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].birthTime[0].$.value|| null;\nmsg.healthcloudga__gendercode__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].administrativeGenderCode[0].$.code || null;\nmsg.healthcloudga__gendersystem__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].administrativeGenderCode[0].$.codeSystem || null;\nmsg.healthcloudga__maritalstatuscode__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].maritalStatusCode[0].$.code || null;\nmsg.healthcloudga__maritalstatuslabel__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].maritalStatusCode[0].$.displayName || null;\nmsg.healthcloudga__communication1code__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].patient[0].languageCommunication[0].languageCode[0].$.code || null;\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension || null;\n\nmsg.healthcloudga__communication1label__c = null;\nmsg.healthcloudga__communication1system__c = null;\nmsg.healthcloudga__address1line1__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].addr[0].streetAddressLine[0] || null;\nmsg.healthcloudga__address1line2__c = null;\nmsg.healthcloudga__address1city__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].addr[0].city[0] || null;\nmsg.healthcloudga__address1state__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].addr[0].state[0] || null;\nmsg.healthcloudga__address1postalcode__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].addr[0].postalCode[0] || null;\nmsg.healthcloudga__address1country__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].addr[0].country[0] || null;\nmsg.healthcloudga__telecom1use__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].telecom[0].$.use || null;\nmsg.healthcloudga__telecom1value__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].telecom[0].$.value || null;\nmsg.healthcloudga__telecom2use__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].telecom[1].$.use || null;\nmsg.healthcloudga__telecom2value__c = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].telecom[1].$.value || null;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":300,"wires":[["76d7a62b280ff74e"]]},{"id":"b4c0e206ff4a06fb","type":"function","z":"8707bb8fcbd22313","name":"Patient ID","func":"msg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":500,"wires":[["99b4d1803c10054b"]]},{"id":"870c3d0d66758171","type":"function","z":"8707bb8fcbd22313","name":"SFID","func":"\nif (msg.payload && msg.payload.length > 0) {\n    msg.sfid = msg.payload[0].sfid\n    \n} else {\n    msg.sfid = null;\n}\n\n\n\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":620,"wires":[["6e047476c4fca8f0","9ef1e703b94a3042","f7ad0cb5d2f56745","15ebc53dcc69c452","a69b8057a54de54b","ed97a23c6f98a08b"]]},{"id":"f7ad0cb5d2f56745","type":"function","z":"8707bb8fcbd22313","name":"Procedures and Practioners/Past Encounters dataset create","func":"// Access the array at the specified path\nlet entries = msg.originalPayload.ClinicalDocument.component[0].structuredBody[0].component[16].section[0].entry;\n\n// Patient Id\nmsg.patient_id = msg.originalPayload.ClinicalDocument.recordTarget[0].patientRole[0].id[0].$.extension\n\nfunction convertToTimestamp(dateStr) {\n    if (!dateStr || dateStr.length !== 14) {\n        return \"1970-01-01 00:00:00\"; // Return default timestamp for invalid or empty dateStr\n    }\n\n    // Extract components from the date string\n    let year = dateStr.substring(0, 4);\n    let month = dateStr.substring(4, 6);\n    let day = dateStr.substring(6, 8);\n    let hour = dateStr.substring(8, 10);\n    let minute = dateStr.substring(10, 12);\n    let second = dateStr.substring(12, 14);\n\n    // Construct and return the formatted date string in 'YYYY-MM-DD HH:MI:SS' format\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}\n\n// Loop through the array\nfor (let i = 0; i < entries.length; i++) {\n    let newMsg = { ...msg }; // Create a copy of the msg object\n\n    // Effective Time: Low Value (Date)\n    newMsg.effectiveTimeLowValue = (entries[i].encounter &&\n                                    entries[i].encounter[0].effectiveTime &&\n                                    entries[i].encounter[0].effectiveTime[0].$ &&\n                                    entries[i].encounter[0].effectiveTime[0].$.value)\n                                    ? convertToTimestamp(entries[i].encounter[0].effectiveTime[0].$.value)\n                                    : \"1970-01-01 00:00:00\";\n\n    // Practitioner: Street Address Line 1\n    newMsg.practitionerStreetAddressLine1 = (entries[i].encounter &&\n                                             entries[i].encounter[0].performer &&\n                                             entries[i].encounter[0].performer[0].assignedEntity &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine[0])\n                                             ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine[0]\n                                             : null;\n\n    // Practitioner: Street Address Line 2\n    newMsg.practitionerStreetAddressLine2 = (entries[i].encounter &&\n                                             entries[i].encounter[0].performer &&\n                                             entries[i].encounter[0].performer[0].assignedEntity &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine &&\n                                             entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine[1])\n                                             ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].streetAddressLine[1]\n                                             : null;\n\n    // Practitioner: City\n    newMsg.practitionerCity = (entries[i].encounter &&\n                               entries[i].encounter[0].performer &&\n                               entries[i].encounter[0].performer[0].assignedEntity &&\n                               entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                               entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].city)\n                               ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].city[0]\n                               : null;\n\n    // Practitioner: State\n    newMsg.practitionerState = (entries[i].encounter &&\n                                entries[i].encounter[0].performer &&\n                                entries[i].encounter[0].performer[0].assignedEntity &&\n                                entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                                entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].state)\n                                ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].state[0]\n                                : null;\n\n    // Practitioner: Postal Code\n    newMsg.practitionerPostalCode = (entries[i].encounter &&\n                                     entries[i].encounter[0].performer &&\n                                     entries[i].encounter[0].performer[0].assignedEntity &&\n                                     entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                                     entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].postalCode)\n                                     ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].postalCode[0]\n                                     : null;\n\n    // Practitioner: Country\n    newMsg.practitionerCountry = (entries[i].encounter &&\n                                  entries[i].encounter[0].performer &&\n                                  entries[i].encounter[0].performer[0].assignedEntity &&\n                                  entries[i].encounter[0].performer[0].assignedEntity[0].addr &&\n                                  entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].country)\n                                  ? entries[i].encounter[0].performer[0].assignedEntity[0].addr[0].country[0]\n                                  : null;\n\n    // Practitioner: Telephone Number\n    newMsg.practitionerTelephoneNumber = (entries[i].encounter &&\n                                          entries[i].encounter[0].performer &&\n                                          entries[i].encounter[0].performer[0].assignedEntity &&\n                                          entries[i].encounter[0].performer[0].assignedEntity[0].telecom &&\n                                          entries[i].encounter[0].performer[0].assignedEntity[0].telecom[0].$ &&\n                                          entries[i].encounter[0].performer[0].assignedEntity[0].telecom[0].$.value)\n                                          ? entries[i].encounter[0].performer[0].assignedEntity[0].telecom[0].$.value\n                                          : null;\n\n    // Practitioner: Given\n    newMsg.practitionerGivenName = (entries[i].encounter &&\n                                    entries[i].encounter[0].performer &&\n                                    entries[i].encounter[0].performer[0].assignedEntity &&\n                                    entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson &&\n                                    entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name &&\n                                    entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name[0].given)\n                                    ? entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name[0].given[0]\n                                    : null;\n\n    // Practitioner: Family\n    newMsg.practitionerFamilyName = (entries[i].encounter &&\n                                     entries[i].encounter[0].performer &&\n                                     entries[i].encounter[0].performer[0].assignedEntity &&\n                                     entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson &&\n                                     entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name &&\n                                     entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name[0].family)\n                                     ? entries[i].encounter[0].performer[0].assignedEntity[0].assignedPerson[0].name[0].family[0]\n                                     : null;\n\n    // Facility: Display Name\n    newMsg.facilityDisplayName = (entries[i].encounter &&\n                                  entries[i].encounter[0].participant &&\n                                  entries[i].encounter[0].participant[0].participantRole &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].code &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].code[0].$.codeSystemName)\n                                  ? entries[i].encounter[0].participant[0].participantRole[0].code[0].$.codeSystemName\n                                  : null;\n\n    // Practitioner Organization: Street Address Line 1\n    newMsg.practitionerOrgStreetAddressLine1 = (entries[i].encounter &&\n                                                entries[i].encounter[0].participant &&\n                                                entries[i].encounter[0].participant[0].participantRole &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine[0])\n                                                ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine[0]\n                                                : null;\n\n    // Practitioner Organization: Street Address Line 2\n    newMsg.practitionerOrgStreetAddressLine2 = (entries[i].encounter &&\n                                                entries[i].encounter[0].participant &&\n                                                entries[i].encounter[0].participant[0].participantRole &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine &&\n                                                entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine[1])\n                                                ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].streetAddressLine[1]\n                                                : null;\n\n    // Practitioner Organization: City\n    newMsg.practitionerOrgCity = (entries[i].encounter &&\n                                  entries[i].encounter[0].participant &&\n                                  entries[i].encounter[0].participant[0].participantRole &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].addr[0].city)\n                                  ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].city[0]\n                                  : null;\n\n    // Practitioner Organization: State\n    newMsg.practitionerOrgState = (entries[i].encounter &&\n                                   entries[i].encounter[0].participant &&\n                                   entries[i].encounter[0].participantRole &&\n                                   entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                   entries[i].encounter[0].participant[0].participantRole[0].addr[0].state)\n                                   ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].state[0]\n                                   : null;\n\n    // Practitioner Organization: Postal Code\n    newMsg.practitionerOrgPostalCode = (entries[i].encounter &&\n                                        entries[i].encounter[0].participant &&\n                                        entries[i].encounter[0].participantRole &&\n                                        entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                        entries[i].encounter[0].participant[0].participantRole[0].addr[0].postalCode)\n                                        ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].postalCode[0]\n                                        : null;\n\n    // Practitioner Organization: Country\n    newMsg.practitionerOrgCountry = (entries[i].encounter &&\n                                     entries[i].encounter[0].participant &&\n                                     entries[i].encounter[0].participantRole &&\n                                     entries[i].encounter[0].participant[0].participantRole[0].addr &&\n                                     entries[i].encounter[0].participant[0].participantRole[0].addr[0].country)\n                                     ? entries[i].encounter[0].participant[0].participantRole[0].addr[0].country[0]\n                                     : null;\n\n    // Practitioner Organization: Telephone Number\n    newMsg.practitionerOrgTelephoneNumber = (entries[i].encounter &&\n                                             entries[i].encounter[0].participant &&\n                                             entries[i].encounter[0].participantRole &&\n                                             entries[i].encounter[0].participant[0].participantRole[0].telecom &&\n                                             entries[i].encounter[0].participant[0].participantRole[0].telecom[0].$ &&\n                                             entries[i].encounter[0].participant[0].participantRole[0].telecom[0].$.value)\n                                             ? entries[i].encounter[0].participant[0].participantRole[0].telecom[0].$.value\n                                             : null;\n\n    // Practitioner Organization: Name\n    newMsg.practitionerOrgName = (entries[i].encounter &&\n                                  entries[i].encounter[0].participant &&\n                                  entries[i].encounter[0].participantRole &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].playingEntity &&\n                                  entries[i].encounter[0].participant[0].participantRole[0].playingEntity[0].name)\n                                  ? entries[i].encounter[0].participant[0].participantRole[0].playingEntity[0].name[0]\n                                  : null;\n\n    // Procedure: Code\n    newMsg.procedureCode = (entries[i].encounter &&\n                            entries[i].encounter[0].entryRelationship &&\n                            entries[i].encounter[0].entryRelationship[0].act &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].$.code)\n                            ? entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].$.code\n                            : null;\n\n    // Procedure: Display Name\n    newMsg.procedureDisplayName = (entries[i].encounter &&\n                                   entries[i].encounter[0].entryRelationship &&\n                                   entries[i].encounter[0].entryRelationship[0].act &&\n                                   entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship &&\n                                   entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation &&\n                                   entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value &&\n                                   entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].$.displayName)\n                                   ? entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].$.displayName\n                                   : null;\n\n    // Narrative Text\n    newMsg.narrativeText = (entries[i].encounter &&\n                            entries[i].encounter[0].entryRelationship &&\n                            entries[i].encounter[0].entryRelationship[0].act &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].translation &&\n                            entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].translation[0].$.displayName)\n                            ? entries[i].encounter[0].entryRelationship[0].act[0].entryRelationship[0].observation[0].value[0].translation[0].$.displayName\n                            : null;\n\n\n    // Push the updated message into the next node\n    node.send(newMsg);\n}\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":340,"wires":[["a20d7b19621cbc64"]]},{"id":"bacc0e6bb19e228e","type":"debug","z":"8707bb8fcbd22313","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":480,"y":120,"wires":[]},{"id":"215133c88cbfb48c","type":"function","z":"8707bb8fcbd22313","name":"Hash Document","func":"const cryptoJs = global.get('cryptoJs');\n\n// Store the original payload\nmsg.originalPayload = RED.util.cloneMessage(msg.payload); // This ensures a deep copy of the payload\n\n\n// Convert the XML payload to a string if necessary\nconst xmlString = JSON.stringify(msg.payload);\n\n// Generate the hash using SHA-256\nconst hash = cryptoJs.SHA256(xmlString)\n\n// Store the hash in msg.hash for further use\nmsg.hash = hash;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":220,"wires":[["b80cbe8341a2a714"]]},{"id":"207eb6701575f1e7","type":"function","z":"8707bb8fcbd22313","name":"ssl function","func":"msg.pgConfig = {\n    user: \"u5aouqlhqbbfj8\", // default process.env.PGUSER || process.env.USER\n    password: \"p99f1914addcf5a646e9d6eb4d05ec3808daa1fa178ac82ede9b320ad9e801c56\", //or function, default process.env.PGPASSWORD\n    host: \"c9mq4861d16jlm.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com\", // default process.env.PGHOST\n    database: \"d1hu6c8ka3e176\", // default process.env.PGDATABASE || process.env.USER\n    port: 5432, // default process.env.PGPORT\n    connectionString: \"postgres://u5aouqlhqbbfj8:p99f1914addcf5a646e9d6eb4d05ec3808daa1fa178ac82ede9b320ad9e801c56@c9mq4861d16jlm.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/d1hu6c8ka3e176\",\n    ssl: {\n        rejectUnauthorized: false,\n        require: true\n    }\n};\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":120,"wires":[[]]},{"id":"76d7a62b280ff74e","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Patient","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrpatient__c\" (\n   \"healthcloudga__givenname1__c\", \n   \"healthcloudga__familyname1__c\",\n   \"healthcloudga__birthdate__c\", \n   \"healthcloudga__gendercode__c\",\n   \"healthcloudga__gendersystem__c\",\n   \"healthcloudga__maritalstatuscode__c\", \n   \"healthcloudga__maritalstatuslabel__c\",\n   \"healthcloudga__communication1code__c\", \n   \"healthcloudga__communication1label__c\",\n   \"healthcloudga__communication1system__c\", healthcloudga__address1line1__c,\n   \"healthcloudga__address1line2__c\", \n   \"healthcloudga__address1city__c\",\n   \"healthcloudga__address1state__c\", \n   \"healthcloudga__address1postalcode__c\",\n   \"healthcloudga__address1country__c\", \n   \"healthcloudga__telecom1use__c\",\n   \"healthcloudga__telecom1value__c\", \n   \"healthcloudga__telecom2use__c\",\n   \"healthcloudga__telecom2value__c\",\n   \"healthcloudga__account__c\",\n   \"healthcloudga__medicalrecordnumber__c\",\n   \"healthcloudga__name__c\" \n) VALUES (\n    '{{msg.healthcloudga__givenname1__c}}', \n    '{{msg.healthcloudga__familyname1__c}}',\n    '{{msg.healthcloudga__birthdate__c}}', \n    '{{msg.healthcloudga__gendercode__c}}',\n    '{{msg.healthcloudga__gendersystem__c}}',\n    '{{msg.healthcloudga__maritalstatuscode__c}}', \n    '{{msg.healthcloudga__maritalstatuslabel__c}}',\n    '{{msg.healthcloudga__communication1code__c}}', \n    '{{msg.healthcloudga__communication1label__c}}',\n    '{{msg.healthcloudga__communication1system__c}}', \n    '{{msg.healthcloudga__address1line1__c}}',\n    '{{msg.healthcloudga__address1line2__c}}', \n    '{{msg.healthcloudga__address1city__c}}',\n    '{{msg.healthcloudga__address1state__c}}', \n    '{{msg.healthcloudga__address1postalcode__c}}',\n    '{{msg.healthcloudga__address1country__c}}', \n    '{{msg.healthcloudga__telecom1use__c}}',\n    '{{msg.healthcloudga__telecom1value__c}}', \n    '{{msg.healthcloudga__telecom2use__c}}',\n    '{{msg.healthcloudga__telecom2value__c}}',\n    '{{msg.sfid}}',\n    '{{msg.patient_id}}',\n    '{{msg.healthcloudga__name__c}}'\n);\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":930,"y":300,"wires":[["319d9531985b7f7a"]]},{"id":"df4a72b6c16b3b48","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Medications","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrmedicationprescription__c\" (\n    \"healthcloudga__medicationcodesystem__c\",\n    \"name\",\n    \"healthcloudga__statuscode__c\",\n    \"healthcloudga__medicationcode__c\",\n    \"healthcloudga__medicationcodelabel__c\",\n    \"healthcloudga__account__c\",\n    \"healthcloudga__datewritten__c\"\n) VALUES (\n    '{{msg.medicationCodeSystem}}',  \n    '{{msg.medicationDisplayName}}', \n    '{{msg.statusCode}}',   \n    '{{msg.medicationCode}}',  \n    '{{msg.medicationDisplayName}}',\n    '{{msg.sfid}}',\n    '{{msg.effectiveTimeLowValue}}'\n);\n\nINSERT INTO \"salesforce\".\"healthcloudga__ehrdosageinstruction__c\" (\n    \"healthcloudga__instruction__c\",\n    \"healthcloudga__supplementalinstruction__c\",\n    \"healthcloudga__routecode__c\",\n    \"healthcloudga__routelabel__c\",\n    \"healthcloudga__routesystem__c\"\n) VALUES (\n    '{{msg.dosageNarrativeText}}',  \n    '{{msg.dosageNarrativeText}}', \n    '{{msg.dosageRouteCode}}',   \n    '{{msg.dosageRouteDisplayName}}',  \n    '{{msg.dosageRouteCodeSystem}}' \n);\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":950,"y":260,"wires":[["319d9531985b7f7a"]]},{"id":"a20d7b19621cbc64","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Procedures and Practioners/Past Encounters","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrprocedure__c\" (\n    \"healthcloudga__performeddatetime__c\",\n    \"healthcloudga__notes__c\",\n    \"healthcloudga__code__c\",\n    \"healthcloudga__codelabel__c\",\n    \"healthcloudga__location__c\",\n    \"healthcloudga__account__c\"\n) VALUES (\n    '{{msg.effectiveTimeLowValue}}',  \n    '{{msg.narrativeText}}',  \n    '{{msg.procedureCode}}',\n    '{{msg.procedureDisplayName}}',\n    '{{msg.facilityDisplayName}}',\n    '{{msg.sfid}}'  \n);\n\nINSERT INTO \"salesforce\".\"healthcloudga__ehrpractitioner__c\" (\n    \"healthcloudga__givenname1__c\",\n    \"healthcloudga__familyname1__c\",\n    \"healthcloudga__address1line1__c\",\n    \"healthcloudga__address1line2__c\",\n    \"healthcloudga__address1city__c\",\n    \"healthcloudga__address1state__c\",\n    \"healthcloudga__address1postalcode__c\",\n    \"healthcloudga__address1country__c\",\n    \"healthcloudga__telecom1value__c\",\n    \"healthcloudga__location1name__c\",\n    \"healthcloudga__location1telecomvalue__c\",\n    \"healthcloudga__location1line1__c\",\n    \"healthcloudga__location1line2__c\",\n    \"healthcloudga__location1city__c\",\n    \"healthcloudga__location1state__c\",\n    \"healthcloudga__location1postalcode__c\",\n    \"healthcloudga__location1country__c\"\n) VALUES (\n    '{{msg.practitionerGivenName}}',  \n    '{{msg.practitionerFamilyName}}',  \n    '{{msg.practitionerStreetAddressLine1}}',\n    '{{msg.practitionerStreetAddressLine2}}',\n    '{{msg.practitionerCity}}',\n    '{{msg.practitionerState}}',\n    '{{msg.practitionerPostalCode}}',\n    '{{msg.practitionerCountry}}',\n    '{{msg.practitionerTelephoneNumber}}',\n    '{{msg.practitionerOrgName}}',\n    '{{msg.practitionerOrgTelephoneNumber}}',\n    '{{msg.practitionerOrgStreetAddressLine1}}',\n    '{{msg.practitionerOrgStreetAddressLine2}}',\n    '{{msg.practitionerOrgCity}}',\n    '{{msg.practitionerOrgState}}',\n    '{{msg.practitionerOrgPostalCode}}',\n    '{{msg.practitionerOrgCountry}}'\n);","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":1050,"y":380,"wires":[["319d9531985b7f7a"]]},{"id":"a7b93ba1e1ab7b95","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Problems/Conditions","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrcondition__c\" (\n    \"healthcloudga__dateasserted__c\",\n    \"healthcloudga__categorycode__c\",\n    \"healthcloudga__catergorylabel__c\",\n    \"healthcloudga__categorysystem__c\",\n    \"healthcloudga__notes__c\",\n    \"healthcloudga__account__c\"\n) VALUES (\n    '{{msg.effectiveTimeLowValue}}',  \n    '{{msg.conditionCode}}',  \n    '{{msg.conditionDisplayName}}',  \n    '{{msg.conditionCodeSystem}}',  \n    '{{msg.narrativeDescription}}',\n    '{{msg.sfid}}'\n);\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":980,"y":460,"wires":[["319d9531985b7f7a"]]},{"id":"8f530f6c5d9073bf","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Immunizations","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrimmunization__c\" (\n    \"healthcloudga__dateadministered__c\",\n    \"healthcloudga__vaccinetypecode__c\",\n    \"healthcloudga__vaccinetypelabel__c\",\n    \"healthcloudga__vaccinetypesystem__c\",\n    \"healthcloudga__account__c\"\n) VALUES ( \n    '{{msg.effectiveTime}}', \n    '{{msg.vaccineCode}}',  \n    '{{msg.vaccineDisplayName}}',\n    '{{msg.vaccineCodeSystem}}',\n    '{{msg.sfid}}'\n);\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":960,"y":500,"wires":[["319d9531985b7f7a"]]},{"id":"cf62e45a669452f4","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Allergies","query":"INSERT INTO \"salesforce\".\"healthcloudga__ehrallergyintolerance__c\" (\n    \"healthcloudga__recordeddate__c\",\n    \"healthcloudga__statuscode__c\",\n    \"healthcloudga__sensitivitytypelabel__c\",\n    \"healthcloudga__sensitivitytypesystem__c\",\n    \"healthcloudga__substancecode__c\",\n    \"healthcloudga__substance255__c\",\n    \"healthcloudga__substancecodesystem__c\",\n    \"healthcloudga__reaction255__c\",\n    \"healthcloudga__sensitivitytypecode__c\",\n    \"healthcloudga__account__c\"\n) VALUES (\n    '{{msg.effectiveTime}}',  \n    '{{msg.statusCode}}', \n    '{{msg.typeOfAllergyDisplayName}}', \n    '{{msg.typeOfAllergyCodeSystem}}',  \n    '{{msg.drugCode}}',  \n    '{{msg.drugDisplayName}}', \n    '{{msg.drugCodeSystem}}', \n    '{{msg.reactionDisplayName}}',\n    '{{msg.typeOfAllergyCode}}',\n    '{{msg.sfid}}'\n);\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":940,"y":540,"wires":[["319d9531985b7f7a"]]},{"id":"b80cbe8341a2a714","type":"postgresql","z":"8707bb8fcbd22313","name":"Check Document Query","query":"SELECT COUNT(*) AS count FROM \"salesforce\".\"hl7_hashes\" WHERE hash = '{{msg.hash}}';;\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":350,"y":320,"wires":[["4f441ebf31270eef"]]},{"id":"7a2e9ff6da0a66f0","type":"postgresql","z":"8707bb8fcbd22313","name":"Insert Document ID","query":"INSERT INTO \"salesforce\".\"hl7_hashes\" (hash) VALUES ('{{msg.hash}}' );\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":330,"y":440,"wires":[["b4c0e206ff4a06fb"]]},{"id":"99b4d1803c10054b","type":"postgresql","z":"8707bb8fcbd22313","name":"SELECT Account Id","query":"SELECT *\nFROM \"salesforce\".\"account\"\nWHERE healthcloudga__medicalrecordnumber__c = '{{msg.patient_id}}';\n","postgreSQLConfig":"ae6893569e928f13","split":false,"rowsPerMsg":1,"outputs":1,"x":330,"y":560,"wires":[["870c3d0d66758171"]]}]